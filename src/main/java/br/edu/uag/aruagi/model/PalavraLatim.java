package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * PalavraLatim generated by hbm2java
 */
@Entity
@Table(name = "palavra_latim", schema = "public"
)
public class PalavraLatim implements java.io.Serializable {

    private int id;
    private String palavra;
    private Integer usuario;
    private Boolean status;
    private List casoAplicados = new ArrayList();
    private List aplicacaoFrases = new ArrayList();
    private List traduzPalavras = new ArrayList();
    private List palavrasDeclinadasesForPalavraLatim = new ArrayList();
    private List palavrasDeclinadasesForPalavraDeclinada = new ArrayList();
    private List palavrasClassificadases = new ArrayList();
    private List questaoGramaticals = new ArrayList();
    private List questaoDeclinacaos = new ArrayList();
    private List radicals = new ArrayList();
    private List declinacaoAplicadas = new ArrayList();
    private List questaoTraduzPalavras = new ArrayList();
    private List lacunas = new ArrayList();

    public PalavraLatim() {
    }

    public PalavraLatim(int id, String palavra) {
        this.id = id;
        this.palavra = palavra;
    }

    public PalavraLatim(int id, String palavra, Integer usuario, Boolean status, List casoAplicados, List aplicacaoFrases, List traduzPalavras, List palavrasDeclinadasesForPalavraLatim, List palavrasDeclinadasesForPalavraDeclinada, List palavrasClassificadases, List questaoGramaticals, List questaoDeclinacaos, List radicals, List declinacaoAplicadas, List questaoTraduzPalavras) {
        this.id = id;
        this.palavra = palavra;
        this.usuario = usuario;
        this.status = status;
        this.casoAplicados = casoAplicados;
        this.aplicacaoFrases = aplicacaoFrases;
        this.traduzPalavras = traduzPalavras;
        this.palavrasDeclinadasesForPalavraLatim = palavrasDeclinadasesForPalavraLatim;
        this.palavrasDeclinadasesForPalavraDeclinada = palavrasDeclinadasesForPalavraDeclinada;
        this.palavrasClassificadases = palavrasClassificadases;
        this.questaoGramaticals = questaoGramaticals;
        this.questaoDeclinacaos = questaoDeclinacaos;
        this.radicals = radicals;
        this.declinacaoAplicadas = declinacaoAplicadas;
        this.questaoTraduzPalavras = questaoTraduzPalavras;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "palavra", nullable = false)
    public String getPalavra() {
        return this.palavra;
    }

    public void setPalavra(String palavra) {
        this.palavra = palavra;
    }

    @Column(name = "usuario")
    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    @Column(name = "status")
    public Boolean getStatus() {
        return this.status;
    }

    public void setStatus(Boolean status) {
        this.status = status;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatim", targetEntity = CasoAplicado.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getCasoAplicados() {
        return this.casoAplicados;
    }

    public void setCasoAplicados(List casoAplicados) {
        this.casoAplicados = casoAplicados;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatim", targetEntity = AplicacaoFrase.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getAplicacaoFrases() {
        return this.aplicacaoFrases;
    }

    public void setAplicacaoFrases(List aplicacaoFrases) {
        this.aplicacaoFrases = aplicacaoFrases;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatim", targetEntity = TraduzPalavra.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getTraduzPalavras() {
        return this.traduzPalavras;
    }

    public void setTraduzPalavras(List traduzPalavras) {
        this.traduzPalavras = traduzPalavras;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatimByPalavraLatim", targetEntity = PalavrasDeclinadas.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getPalavrasDeclinadasesForPalavraLatim() {
        return this.palavrasDeclinadasesForPalavraLatim;
    }

    public void setPalavrasDeclinadasesForPalavraLatim(List palavrasDeclinadasesForPalavraLatim) {
        this.palavrasDeclinadasesForPalavraLatim = palavrasDeclinadasesForPalavraLatim;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatimByPalavraDeclinada", targetEntity = PalavrasDeclinadas.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getPalavrasDeclinadasesForPalavraDeclinada() {
        return this.palavrasDeclinadasesForPalavraDeclinada;
    }

    public void setPalavrasDeclinadasesForPalavraDeclinada(List palavrasDeclinadasesForPalavraDeclinada) {
        this.palavrasDeclinadasesForPalavraDeclinada = palavrasDeclinadasesForPalavraDeclinada;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatim", targetEntity = PalavrasClassificadas.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getPalavrasClassificadases() {
        return this.palavrasClassificadases;
    }

    public void setPalavrasClassificadases(List palavrasClassificadases) {
        this.palavrasClassificadases = palavrasClassificadases;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatim", targetEntity = QuestaoGramatical.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getQuestaoGramaticals() {
        return this.questaoGramaticals;
    }

    public void setQuestaoGramaticals(List questaoGramaticals) {
        this.questaoGramaticals = questaoGramaticals;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatim", targetEntity = QuestaoDeclinacao.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getQuestaoDeclinacaos() {
        return this.questaoDeclinacaos;
    }

    public void setQuestaoDeclinacaos(List questaoDeclinacaos) {
        this.questaoDeclinacaos = questaoDeclinacaos;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatim", targetEntity = Radical.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getRadicals() {
        return this.radicals;
    }

    public void setRadicals(List radicals) {
        this.radicals = radicals;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatim", targetEntity = DeclinacaoAplicada.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getDeclinacaoAplicadas() {
        return this.declinacaoAplicadas;
    }

    public void setDeclinacaoAplicadas(List declinacaoAplicadas) {
        this.declinacaoAplicadas = declinacaoAplicadas;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatim", targetEntity = QuestaoTraduzPalavra.class)
    @Fetch(FetchMode.SUBSELECT)
    public List getQuestaoTraduzPalavras() {
        return this.questaoTraduzPalavras;
    }

    public void setQuestaoTraduzPalavras(List questaoTraduzPalavras) {
        this.questaoTraduzPalavras = questaoTraduzPalavras;
    }
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraLatim", targetEntity = Lacuna.class, orphanRemoval = true)
    @Fetch(FetchMode.SUBSELECT)
    public List<Lacuna> getLacunas() {
        return this.lacunas;
    }

    public void setLacunas(List<Lacuna> lacunas) {
        this.lacunas = lacunas;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 97 * hash + this.id;
        hash = 97 * hash + (this.palavra != null ? this.palavra.hashCode() : 0);
        hash = 97 * hash + (this.usuario != null ? this.usuario.hashCode() : 0);
        hash = 97 * hash + (this.status != null ? this.status.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final PalavraLatim other = (PalavraLatim) obj;
        if (this.id != other.id) {
            return false;
        }
        if ((this.palavra == null) ? (other.palavra != null) : !this.palavra.equals(other.palavra)) {
            return false;
        }
        if (this.usuario != other.usuario && (this.usuario == null || !this.usuario.equals(other.usuario))) {
            return false;
        }
        if (this.status != other.status && (this.status == null || !this.status.equals(other.status))) {
            return false;
        }
        return true;
    }
}
