package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Lacuna generated by hbm2java
 */
@Entity
@Table(name = "lacuna", schema = "public"
)
public class Lacuna implements java.io.Serializable {

    private int id;
    private Caso caso;
    private QuestaoLacuna questaoLacuna;
    private Integer inicio;
    private Integer fim;
    private Integer usuario;

    public Lacuna() {
    }

    public Lacuna(int id, Caso caso, QuestaoLacuna questaoLacuna) {
        this.id = id;
        this.caso = caso;
        this.questaoLacuna = questaoLacuna;
    }

    public Lacuna(int id, Caso caso, QuestaoLacuna questaoLacuna, Integer inicio, Integer fim, Integer usuario) {
        this.id = id;
        this.caso = caso;
        this.questaoLacuna = questaoLacuna;
        this.inicio = inicio;
        this.fim = fim;
        this.usuario = usuario;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "caso", nullable = false)
    public Caso getCaso() {
        return this.caso;
    }

    public void setCaso(Caso caso) {
        this.caso = caso;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "questao_lacuna", nullable = false)
    public QuestaoLacuna getQuestaoLacuna() {
        return this.questaoLacuna;
    }

    public void setQuestaoLacuna(QuestaoLacuna questaoLacuna) {
        this.questaoLacuna = questaoLacuna;
    }

    @Column(name = "inicio")
    public Integer getInicio() {
        return this.inicio;
    }

    public void setInicio(Integer inicio) {
        this.inicio = inicio;
    }

    @Column(name = "fim")
    public Integer getFim() {
        return this.fim;
    }

    public void setFim(Integer fim) {
        this.fim = fim;
    }

    @Column(name = "usuario")
    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 73 * hash + this.id;
        hash = 73 * hash + (this.caso != null ? this.caso.hashCode() : 0);
        hash = 73 * hash + (this.questaoLacuna != null ? this.questaoLacuna.hashCode() : 0);
        hash = 73 * hash + (this.inicio != null ? this.inicio.hashCode() : 0);
        hash = 73 * hash + (this.fim != null ? this.fim.hashCode() : 0);
        hash = 73 * hash + (this.usuario != null ? this.usuario.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Lacuna other = (Lacuna) obj;
        if (this.id != other.id) {
            return false;
        }
        if (this.caso != other.caso && (this.caso == null || !this.caso.equals(other.caso))) {
            return false;
        }
        if (this.questaoLacuna != other.questaoLacuna && (this.questaoLacuna == null || !this.questaoLacuna.equals(other.questaoLacuna))) {
            return false;
        }
        if (this.inicio != other.inicio && (this.inicio == null || !this.inicio.equals(other.inicio))) {
            return false;
        }
        if (this.fim != other.fim && (this.fim == null || !this.fim.equals(other.fim))) {
            return false;
        }
        if (this.usuario != other.usuario && (this.usuario == null || !this.usuario.equals(other.usuario))) {
            return false;
        }
        return true;
    }

}
