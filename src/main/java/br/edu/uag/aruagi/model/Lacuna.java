package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Lacuna generated by hbm2java
 */
@Entity
@Table(name = "lacuna", schema = "public"
)
public class Lacuna implements java.io.Serializable {

    private int id;
    private QuestaoLacuna questaoLacuna;
    private Integer usuario;
    private PalavraLatim palavraLatim;
    private int index;
    private Boolean status;

    @Column(name = "status")
    public Boolean getStatus() {
        return status;
    }

    public void setStatus(Boolean status) {
        this.status = status;
    }
    

    public Lacuna() {
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "questao_lacuna", nullable = false)
    public QuestaoLacuna getQuestaoLacuna() {
        return this.questaoLacuna;
    }

    public void setQuestaoLacuna(QuestaoLacuna questaoLacuna) {
        this.questaoLacuna = questaoLacuna;
    }

    @Column(name = "usuario")
    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "palavra_latim", nullable = false)
    public PalavraLatim getPalavraLatim() {
        return palavraLatim;
    }

    public void setPalavraLatim(PalavraLatim palavraLatim) {
        this.palavraLatim = palavraLatim;
    }

    @Column(name = "indice")
    public int getIndex() {
        return index;
    }

    public void setIndex(int index) {
        this.index = index;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 13 * hash + this.id;
        hash = 13 * hash + (this.questaoLacuna != null ? this.questaoLacuna.hashCode() : 0);
        hash = 13 * hash + (this.palavraLatim != null ? this.palavraLatim.hashCode() : 0);
        hash = 13 * hash + this.index;
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Lacuna other = (Lacuna) obj;
        if (this.id != other.id) {
            return false;
        }
        if (this.questaoLacuna != other.questaoLacuna && (this.questaoLacuna == null || !this.questaoLacuna.equals(other.questaoLacuna))) {
            return false;
        }
        if (this.palavraLatim != other.palavraLatim && (this.palavraLatim == null || !this.palavraLatim.equals(other.palavraLatim))) {
            return false;
        }
        if (this.index != other.index) {
            return false;
        }
        return true;
    }

}
