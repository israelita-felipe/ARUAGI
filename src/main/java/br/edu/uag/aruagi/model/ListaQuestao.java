package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ListaQuestao generated by hbm2java
 */
@Entity
@Table(name = "lista_questao", schema = "public"
)
public class ListaQuestao implements java.io.Serializable {

    private int id;
    private AtividadeQuestao atividadeQuestao;
    private Integer idQuestao;
    private Integer usuario;
    private Set linksQuestaos = new HashSet(0);

    public ListaQuestao() {
    }

    public ListaQuestao(int id, AtividadeQuestao atividadeQuestao) {
        this.id = id;
        this.atividadeQuestao = atividadeQuestao;
    }

    public ListaQuestao(int id, AtividadeQuestao atividadeQuestao, Integer idQuestao, Integer usuario, Set linksQuestaos) {
        this.id = id;
        this.atividadeQuestao = atividadeQuestao;
        this.idQuestao = idQuestao;
        this.usuario = usuario;
        this.linksQuestaos = linksQuestaos;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "atividade_questao", nullable = false)
    public AtividadeQuestao getAtividadeQuestao() {
        return this.atividadeQuestao;
    }

    public void setAtividadeQuestao(AtividadeQuestao atividadeQuestao) {
        this.atividadeQuestao = atividadeQuestao;
    }

    @Column(name = "id_questao")
    public Integer getIdQuestao() {
        return this.idQuestao;
    }

    public void setIdQuestao(Integer idQuestao) {
        this.idQuestao = idQuestao;
    }

    @Column(name = "usuario")
    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "listaQuestao", targetEntity = LinksQuestao.class)
    public Set getLinksQuestaos() {
        return this.linksQuestaos;
    }

    public void setLinksQuestaos(Set linksQuestaos) {
        this.linksQuestaos = linksQuestaos;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 29 * hash + this.id;
        hash = 29 * hash + (this.atividadeQuestao != null ? this.atividadeQuestao.hashCode() : 0);
        hash = 29 * hash + (this.idQuestao != null ? this.idQuestao.hashCode() : 0);
        hash = 29 * hash + (this.usuario != null ? this.usuario.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final ListaQuestao other = (ListaQuestao) obj;
        if (this.id != other.id) {
            return false;
        }
        if (this.atividadeQuestao != other.atividadeQuestao && (this.atividadeQuestao == null || !this.atividadeQuestao.equals(other.atividadeQuestao))) {
            return false;
        }
        if (this.idQuestao != other.idQuestao && (this.idQuestao == null || !this.idQuestao.equals(other.idQuestao))) {
            return false;
        }
        if (this.usuario != other.usuario && (this.usuario == null || !this.usuario.equals(other.usuario))) {
            return false;
        }
        return true;
    }

}
