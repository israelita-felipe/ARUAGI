package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Radical generated by hbm2java
 */
@Entity
@Table(name = "radical", schema = "public"
)
public class Radical implements java.io.Serializable {

    private int id;
    private PessoaGramatical pessoaGramatical;
    private TempoVerbal tempoVerbal;
    private PalavraLatim palavraLatim;
    private Integer usuario;

    public Radical() {
    }

    public Radical(int id, PessoaGramatical pessoaGramatical, TempoVerbal tempoVerbal, PalavraLatim palavraLatim) {
        this.id = id;
        this.pessoaGramatical = pessoaGramatical;
        this.tempoVerbal = tempoVerbal;
        this.palavraLatim = palavraLatim;
    }

    public Radical(int id, PessoaGramatical pessoaGramatical, TempoVerbal tempoVerbal, PalavraLatim palavraLatim, Integer usuario) {
        this.id = id;
        this.pessoaGramatical = pessoaGramatical;
        this.tempoVerbal = tempoVerbal;
        this.palavraLatim = palavraLatim;
        this.usuario = usuario;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "pessoa_gramatical", nullable = false)
    public PessoaGramatical getPessoaGramatical() {
        return this.pessoaGramatical;
    }

    public void setPessoaGramatical(PessoaGramatical pessoaGramatical) {
        this.pessoaGramatical = pessoaGramatical;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "tempo_verbal", nullable = false)
    public TempoVerbal getTempoVerbal() {
        return this.tempoVerbal;
    }

    public void setTempoVerbal(TempoVerbal tempoVerbal) {
        this.tempoVerbal = tempoVerbal;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "palavra_latim", nullable = false)
    public PalavraLatim getPalavraLatim() {
        return this.palavraLatim;
    }

    public void setPalavraLatim(PalavraLatim palavraLatim) {
        this.palavraLatim = palavraLatim;
    }

    @Column(name = "usuario")
    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 61 * hash + this.id;
        hash = 61 * hash + (this.pessoaGramatical != null ? this.pessoaGramatical.hashCode() : 0);
        hash = 61 * hash + (this.tempoVerbal != null ? this.tempoVerbal.hashCode() : 0);
        hash = 61 * hash + (this.palavraLatim != null ? this.palavraLatim.hashCode() : 0);
        hash = 61 * hash + (this.usuario != null ? this.usuario.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Radical other = (Radical) obj;
        if (this.id != other.id) {
            return false;
        }
        if (this.pessoaGramatical != other.pessoaGramatical && (this.pessoaGramatical == null || !this.pessoaGramatical.equals(other.pessoaGramatical))) {
            return false;
        }
        if (this.tempoVerbal != other.tempoVerbal && (this.tempoVerbal == null || !this.tempoVerbal.equals(other.tempoVerbal))) {
            return false;
        }
        if (this.palavraLatim != other.palavraLatim && (this.palavraLatim == null || !this.palavraLatim.equals(other.palavraLatim))) {
            return false;
        }
        if (this.usuario != other.usuario && (this.usuario == null || !this.usuario.equals(other.usuario))) {
            return false;
        }
        return true;
    }

}
