package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Videos generated by hbm2java
 */
@Entity
@Table(name = "videos", schema = "public"
)
public class Videos implements java.io.Serializable {

    private int id;
    private String link;
    private String descricao;
    private Integer usuario;
    private Set videosPostagems = new HashSet(0);

    public Videos() {
    }

    public Videos(int id, String link) {
        this.id = id;
        this.link = link;
    }

    public Videos(int id, String link, String descricao, Integer usuario, Set videosPostagems) {
        this.id = id;
        this.link = link;
        this.descricao = descricao;
        this.usuario = usuario;
        this.videosPostagems = videosPostagems;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "link", nullable = false)
    public String getLink() {
        return this.link;
    }

    public void setLink(String link) {
        this.link = link;
    }

    @Column(name = "descricao")
    public String getDescricao() {
        return this.descricao;
    }

    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    @Column(name = "usuario")
    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "videos", targetEntity = VideosPostagem.class)
    public Set getVideosPostagems() {
        return this.videosPostagems;
    }

    public void setVideosPostagems(Set videosPostagems) {
        this.videosPostagems = videosPostagems;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 83 * hash + this.id;
        hash = 83 * hash + (this.link != null ? this.link.hashCode() : 0);
        hash = 83 * hash + (this.descricao != null ? this.descricao.hashCode() : 0);
        hash = 83 * hash + (this.usuario != null ? this.usuario.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Videos other = (Videos) obj;
        if (this.id != other.id) {
            return false;
        }
        if ((this.link == null) ? (other.link != null) : !this.link.equals(other.link)) {
            return false;
        }
        if ((this.descricao == null) ? (other.descricao != null) : !this.descricao.equals(other.descricao)) {
            return false;
        }
        if (this.usuario != other.usuario && (this.usuario == null || !this.usuario.equals(other.usuario))) {
            return false;
        }
        return true;
    }

}
