package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Acesso generated by hbm2java
 */
@Entity
@Table(name = "acesso", schema = "public"
)
public class Acesso implements java.io.Serializable {

    private Date data;
    private Integer acessos;
    private Boolean status;

    public Acesso() {
    }

    public Acesso(Date data) {
        this.data = data;
    }

    public Acesso(Date data, Integer acessos) {
        this.data = data;
        this.acessos = acessos;
    }

    @Id
    @Temporal(TemporalType.DATE)
    @Column(name = "data")
    public Date getData() {
        return this.data;
    }

    public void setData(Date data) {
        this.data = data;
    }

    @Column(name = "acessos")
    public Integer getAcessos() {
        return this.acessos;
    }

    public void setAcessos(Integer acessos) {
        this.acessos = acessos;
    }
    @Column(name = "status")
    public Boolean getStatus() {
        return status;
    }

    public void setStatus(Boolean status) {
        this.status = status;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 53 * hash + (this.data != null ? this.data.hashCode() : 0);
        hash = 53 * hash + (this.acessos != null ? this.acessos.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Acesso other = (Acesso) obj;
        if (this.data != other.data && (this.data == null || !this.data.equals(other.data))) {
            return false;
        }
        return !(this.acessos != other.acessos && (this.acessos == null || !this.acessos.equals(other.acessos)));
    }

}
