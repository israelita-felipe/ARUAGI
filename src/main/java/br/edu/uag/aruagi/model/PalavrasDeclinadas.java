package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * PalavrasDeclinadas generated by hbm2java
 */
@Entity
@Table(name = "palavras_declinadas", schema = "public"
)
public class PalavrasDeclinadas implements java.io.Serializable {

    private PalavrasDeclinadasId id;
    private PalavraLatim palavraLatimByPalavraDeclinada;
    private PalavraLatim palavraLatimByPalavraLatim;
    private Integer usuario;

    public PalavrasDeclinadas() {
    }

    public PalavrasDeclinadas(PalavrasDeclinadasId id, PalavraLatim palavraLatimByPalavraDeclinada, PalavraLatim palavraLatimByPalavraLatim) {
        this.id = id;
        this.palavraLatimByPalavraDeclinada = palavraLatimByPalavraDeclinada;
        this.palavraLatimByPalavraLatim = palavraLatimByPalavraLatim;
    }

    public PalavrasDeclinadas(PalavrasDeclinadasId id, PalavraLatim palavraLatimByPalavraDeclinada, PalavraLatim palavraLatimByPalavraLatim, Integer usuario) {
        this.id = id;
        this.palavraLatimByPalavraDeclinada = palavraLatimByPalavraDeclinada;
        this.palavraLatimByPalavraLatim = palavraLatimByPalavraLatim;
        this.usuario = usuario;
    }

    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "palavraLatim", column = @Column(name = "palavra_latim", nullable = false)),
        @AttributeOverride(name = "palavraDeclinada", column = @Column(name = "palavra_declinada", nullable = false))})
    public PalavrasDeclinadasId getId() {
        return this.id;
    }

    public void setId(PalavrasDeclinadasId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "palavra_declinada", nullable = false, insertable = false, updatable = false)
    public PalavraLatim getPalavraLatimByPalavraDeclinada() {
        return this.palavraLatimByPalavraDeclinada;
    }

    public void setPalavraLatimByPalavraDeclinada(PalavraLatim palavraLatimByPalavraDeclinada) {
        this.palavraLatimByPalavraDeclinada = palavraLatimByPalavraDeclinada;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "palavra_latim", nullable = false, insertable = false, updatable = false)
    public PalavraLatim getPalavraLatimByPalavraLatim() {
        return this.palavraLatimByPalavraLatim;
    }

    public void setPalavraLatimByPalavraLatim(PalavraLatim palavraLatimByPalavraLatim) {
        this.palavraLatimByPalavraLatim = palavraLatimByPalavraLatim;
    }

    @Column(name = "usuario")
    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 41 * hash + (this.id != null ? this.id.hashCode() : 0);
        hash = 41 * hash + (this.palavraLatimByPalavraDeclinada != null ? this.palavraLatimByPalavraDeclinada.hashCode() : 0);
        hash = 41 * hash + (this.palavraLatimByPalavraLatim != null ? this.palavraLatimByPalavraLatim.hashCode() : 0);
        hash = 41 * hash + (this.usuario != null ? this.usuario.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final PalavrasDeclinadas other = (PalavrasDeclinadas) obj;
        if (this.id != other.id && (this.id == null || !this.id.equals(other.id))) {
            return false;
        }
        if (this.palavraLatimByPalavraDeclinada != other.palavraLatimByPalavraDeclinada && (this.palavraLatimByPalavraDeclinada == null || !this.palavraLatimByPalavraDeclinada.equals(other.palavraLatimByPalavraDeclinada))) {
            return false;
        }
        if (this.palavraLatimByPalavraLatim != other.palavraLatimByPalavraLatim && (this.palavraLatimByPalavraLatim == null || !this.palavraLatimByPalavraLatim.equals(other.palavraLatimByPalavraLatim))) {
            return false;
        }
        if (this.usuario != other.usuario && (this.usuario == null || !this.usuario.equals(other.usuario))) {
            return false;
        }
        return true;
    }

}
