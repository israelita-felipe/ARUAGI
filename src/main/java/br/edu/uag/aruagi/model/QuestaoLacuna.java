package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * QuestaoLacuna generated by hbm2java
 */
@Entity
@Table(name = "questao_lacuna", schema = "public"
)
public class QuestaoLacuna implements java.io.Serializable {

    private int id;
    private FraseLatim fraseLatim;
    private NivelQuestao nivelQuestao;
    private boolean status;
    private String titulo;
    private String enunciado;
    private Integer usuario;
    private List<Lacuna> lacunas = new ArrayList<Lacuna>();

    public QuestaoLacuna() {
    }

    public QuestaoLacuna(int id, FraseLatim fraseLatim, NivelQuestao nivelQuestao, boolean status) {
        this.id = id;
        this.fraseLatim = fraseLatim;
        this.nivelQuestao = nivelQuestao;
        this.status = status;
    }

    public QuestaoLacuna(int id, FraseLatim fraseLatim, NivelQuestao nivelQuestao, boolean status, String titulo, String enunciado, Integer usuario, List<Lacuna> lacunas) {
        this.id = id;
        this.fraseLatim = fraseLatim;
        this.nivelQuestao = nivelQuestao;
        this.status = status;
        this.titulo = titulo;
        this.enunciado = enunciado;
        this.usuario = usuario;
        this.lacunas = lacunas;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "frase_latim", nullable = false)
    public FraseLatim getFraseLatim() {
        return this.fraseLatim;
    }

    public void setFraseLatim(FraseLatim fraseLatim) {
        this.fraseLatim = fraseLatim;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "nivel", nullable = false)
    public NivelQuestao getNivelQuestao() {
        return this.nivelQuestao;
    }

    public void setNivelQuestao(NivelQuestao nivelQuestao) {
        this.nivelQuestao = nivelQuestao;
    }

    @Column(name = "status", nullable = false)
    public boolean isStatus() {
        return this.status;
    }

    public void setStatus(boolean status) {
        this.status = status;
    }

    @Column(name = "titulo")
    public String getTitulo() {
        return this.titulo;
    }

    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }

    @Column(name = "enunciado")
    public String getEnunciado() {
        return this.enunciado;
    }

    public void setEnunciado(String enunciado) {
        this.enunciado = enunciado;
    }

    @Column(name = "usuario")
    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "questaoLacuna", targetEntity = Lacuna.class)
    @Fetch(FetchMode.SUBSELECT)
    public List<Lacuna> getLacunas() {
        return this.lacunas;
    }

    public void setLacunas(List<Lacuna> lacunas) {
        this.lacunas = lacunas;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 73 * hash + this.id;
        hash = 73 * hash + (this.fraseLatim != null ? this.fraseLatim.hashCode() : 0);
        hash = 73 * hash + (this.nivelQuestao != null ? this.nivelQuestao.hashCode() : 0);
        hash = 73 * hash + (this.status ? 1 : 0);
        hash = 73 * hash + (this.titulo != null ? this.titulo.hashCode() : 0);
        hash = 73 * hash + (this.enunciado != null ? this.enunciado.hashCode() : 0);
        hash = 73 * hash + (this.usuario != null ? this.usuario.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final QuestaoLacuna other = (QuestaoLacuna) obj;
        if (this.id != other.id) {
            return false;
        }
        if (this.fraseLatim != other.fraseLatim && (this.fraseLatim == null || !this.fraseLatim.equals(other.fraseLatim))) {
            return false;
        }
        if (this.nivelQuestao != other.nivelQuestao && (this.nivelQuestao == null || !this.nivelQuestao.equals(other.nivelQuestao))) {
            return false;
        }
        if (this.status != other.status) {
            return false;
        }
        if ((this.titulo == null) ? (other.titulo != null) : !this.titulo.equals(other.titulo)) {
            return false;
        }
        if ((this.enunciado == null) ? (other.enunciado != null) : !this.enunciado.equals(other.enunciado)) {
            return false;
        }
        if (this.usuario != other.usuario && (this.usuario == null || !this.usuario.equals(other.usuario))) {
            return false;
        }
        return true;
    }

}
