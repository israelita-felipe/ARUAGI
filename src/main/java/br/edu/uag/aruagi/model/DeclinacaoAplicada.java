package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * DeclinacaoAplicada generated by hbm2java
 */
@Entity
@Table(name = "declinacao_aplicada", schema = "public"
)
public class DeclinacaoAplicada implements java.io.Serializable {

    private DeclinacaoAplicadaId id;
    private PalavraLatim palavraLatim;
    private Declinacao declinacao;
    private Integer usuario;
    private Boolean status;

    public DeclinacaoAplicada() {
    }

    public DeclinacaoAplicada(DeclinacaoAplicadaId id, PalavraLatim palavraLatim, Declinacao declinacao) {
        this.id = id;
        this.palavraLatim = palavraLatim;
        this.declinacao = declinacao;
    }

    public DeclinacaoAplicada(DeclinacaoAplicadaId id, PalavraLatim palavraLatim, Declinacao declinacao, Integer usuario, Boolean status) {
        this.id = id;
        this.palavraLatim = palavraLatim;
        this.declinacao = declinacao;
        this.usuario = usuario;
        this.status = status;
    }

    @EmbeddedId
    @AttributeOverrides({
        @AttributeOverride(name = "declinacao", column = @Column(name = "declinacao", nullable = false)),
        @AttributeOverride(name = "palavra", column = @Column(name = "palavra", nullable = false))})
    public DeclinacaoAplicadaId getId() {
        return this.id;
    }

    public void setId(DeclinacaoAplicadaId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "palavra", nullable = false, insertable = false, updatable = false)
    public PalavraLatim getPalavraLatim() {
        return this.palavraLatim;
    }

    public void setPalavraLatim(PalavraLatim palavraLatim) {
        this.id.setPalavra(palavraLatim.getId());
        this.palavraLatim = palavraLatim;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "declinacao", nullable = false, insertable = false, updatable = false)
    public Declinacao getDeclinacao() {
        return this.declinacao;
    }

    public void setDeclinacao(Declinacao declinacao) {
        this.id.setDeclinacao(declinacao.getId());
        this.declinacao = declinacao;
    }

    @Column(name = "usuario")
    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    @Column(name = "status")
    public Boolean getStatus() {
        return this.status;
    }

    public void setStatus(Boolean status) {
        this.status = status;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 97 * hash + (this.id != null ? this.id.hashCode() : 0);
        hash = 97 * hash + (this.palavraLatim != null ? this.palavraLatim.hashCode() : 0);
        hash = 97 * hash + (this.declinacao != null ? this.declinacao.hashCode() : 0);
        hash = 97 * hash + (this.usuario != null ? this.usuario.hashCode() : 0);
        hash = 97 * hash + (this.status != null ? this.status.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final DeclinacaoAplicada other = (DeclinacaoAplicada) obj;
        if (this.id != other.id && (this.id == null || !this.id.equals(other.id))) {
            return false;
        }
        if (this.palavraLatim != other.palavraLatim && (this.palavraLatim == null || !this.palavraLatim.equals(other.palavraLatim))) {
            return false;
        }
        if (this.declinacao != other.declinacao && (this.declinacao == null || !this.declinacao.equals(other.declinacao))) {
            return false;
        }
        if (this.usuario != other.usuario && (this.usuario == null || !this.usuario.equals(other.usuario))) {
            return false;
        }
        if (this.status != other.status && (this.status == null || !this.status.equals(other.status))) {
            return false;
        }
        return true;
    }

}
