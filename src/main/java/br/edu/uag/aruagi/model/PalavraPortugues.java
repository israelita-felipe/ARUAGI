package br.edu.uag.aruagi.model;
// Generated 09/08/2014 12:29:58 by Hibernate Tools 3.6.0

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * PalavraPortugues generated by hbm2java
 */
@Entity
@Table(name = "palavra_portugues", schema = "public"
)
public class PalavraPortugues implements java.io.Serializable {

    private int id;
    private String palavra;
    private Integer usuario;
    private Boolean status;
    private List traduzPalavras = new ArrayList();
    private List questoesTraduzPalavras = new ArrayList();

    public PalavraPortugues() {
    }

    public PalavraPortugues(int id, String palavra) {
        this.id = id;
        this.palavra = palavra;
    }

    public PalavraPortugues(int id, String palavra, Integer usuario, Boolean status, List traduzPalavras) {
        this.id = id;
        this.palavra = palavra;
        this.usuario = usuario;
        this.status = status;
        this.traduzPalavras = traduzPalavras;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "palavra", nullable = false)
    public String getPalavra() {
        return this.palavra;
    }

    public void setPalavra(String palavra) {
        this.palavra = palavra;
    }

    @Column(name = "usuario")
    public Integer getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Integer usuario) {
        this.usuario = usuario;
    }

    @Column(name = "status")
    public Boolean getStatus() {
        return this.status;
    }

    public void setStatus(Boolean status) {
        this.status = status;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraPortugues", targetEntity = TraduzPalavra.class)
    @Fetch(FetchMode.SUBSELECT)
    public List<TraduzPalavra> getTraduzPalavras() {
        return this.traduzPalavras;
    }

    public void setTraduzPalavras(List traduzPalavras) {
        this.traduzPalavras = traduzPalavras;
    }
    
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "palavraPortugues", targetEntity = QuestaoTraduzPalavra.class)
    @Fetch(FetchMode.SUBSELECT)
    public List<QuestaoTraduzPalavra> getQuestoesTraduzPalavras() {
        return this.questoesTraduzPalavras;
    }

    public void setQuestoesTraduzPalavras(List traduzPalavras) {
        this.questoesTraduzPalavras = traduzPalavras;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 97 * hash + this.id;
        hash = 97 * hash + (this.palavra != null ? this.palavra.hashCode() : 0);
        hash = 97 * hash + (this.status != null ? this.status.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final PalavraPortugues other = (PalavraPortugues) obj;
        if (this.id != other.id) {
            return false;
        }
        if ((this.palavra == null) ? (other.palavra != null) : !this.palavra.equals(other.palavra)) {
            return false;
        }
        if (this.status != other.status && (this.status == null || !this.status.equals(other.status))) {
            return false;
        }
        return true;
    }

}
